// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package thread is a generated GoMock package.
package thread

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockelasticsearch is a mock of elasticsearch interface
type Mockelasticsearch struct {
	ctrl     *gomock.Controller
	recorder *MockelasticsearchMockRecorder
}

// MockelasticsearchMockRecorder is the mock recorder for Mockelasticsearch
type MockelasticsearchMockRecorder struct {
	mock *Mockelasticsearch
}

// NewMockelasticsearch creates a new mock instance
func NewMockelasticsearch(ctrl *gomock.Controller) *Mockelasticsearch {
	mock := &Mockelasticsearch{ctrl: ctrl}
	mock.recorder = &MockelasticsearchMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockelasticsearch) EXPECT() *MockelasticsearchMockRecorder {
	return m.recorder
}

// PutThread mocks base method
func (m *Mockelasticsearch) PutThread(arg0 context.Context, arg1 Thread) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutThread", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutThread indicates an expected call of PutThread
func (mr *MockelasticsearchMockRecorder) PutThread(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutThread", reflect.TypeOf((*Mockelasticsearch)(nil).PutThread), arg0, arg1)
}
